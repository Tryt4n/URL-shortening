@use "../base/functions" as func;
@use "../abstracts/colors" as c;
@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as *;

.shortener {
  position: relative;
  translate: 0 -50%;
  border-radius: 0.5rem;

  &__information {
    z-index: -1;
    visibility: hidden;
    position: absolute;
    font-size: v.$information-invalid-font-size;
    color: c.$red;
  }
  &:has(input:where(.invalid)) .shortener__information {
    z-index: 1;
    visibility: visible;
  }
}

.shortened-links-wrapper {
  scrollbar-width: thin;
  scrollbar-color: #999 transparent;
  z-index: 100;
}
.shortened-links-wrapper::-webkit-scrollbar {
  width: 0.5vw;
}
.shortened-links-wrapper::-webkit-scrollbar-thumb {
  background-color: #999;
  border-radius: 9999px;
}
.shortened-links-wrapper::-webkit-scrollbar-track {
  background-color: transparent;
}

.shortened-links-wrapper {
  margin-top: -3rem;
  @include flex(column);
  gap: 1rem;
  max-height: 50vh;
  overflow-y: scroll;

  &__item {
    background: white;
    border-radius: 0.25rem;
    padding: 1rem;
    gap: 1rem;
    & .url-wrap {
      flex-grow: 1;
      word-break: break-all;
    }

    @media (width >= func.rem(1024)) {
      @include flex(row, space-between, center);
      & button {
        width: func.rem(110);
      }

      & .url-wrap {
        @include flex(row, space-between, center);
        gap: 1rem;

        & hr {
          display: none;
        }
      }
    }
    @media (width < func.rem(1024)) {
      @include flex(column, flex-start);

      & .url-wrap {
        @include flex(column, flex-start, flex-start);
        & hr {
          width: calc(100% + 2rem);
          translate: -1rem;
          border-top: 0;
        }
      }
    }
  }

  & .url {
    font-weight: bold;
    word-wrap: break-word;

    &--before {
      color: c.$very-dark-violet;
    }
    &--after {
      color: c.$cyan;
      text-align: end;
    }
  }
  &:last-child {
    margin-bottom: 7.5rem;
  }
}

@media (width >= func.rem(768)) {
  .shortener {
    @include flex(row, space-between, center);
    gap: 1.5rem;
    background: url("/app/assets/images/bg-shorten-desktop.svg");
    background-repeat: no-repeat;
    background-size: cover;
    background-color: c.$dark-violet;
    padding: 3rem;

    &__information {
      translate: 0 3rem;
    }
  }
}

@media (width < func.rem(768)) {
  .shortener {
    background: url("/app/assets/images/bg-shorten-mobile.svg");
    background-repeat: no-repeat;
    background-size: contain;
    background-position: top right;
    background-color: c.$dark-violet;
    padding: 1.5rem;
    @include flex(column);
    gap: 1.5rem;
    &:has(input:where(.invalid)) {
      gap: calc(1.5rem + v.$information-invalid-font-size);
    }

    &__information {
      translate: 0 4.1rem;
    }
  }
}
